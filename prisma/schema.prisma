generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id
  username     String    @unique
  displayName  String
  email        String?   @unique
  passwordHash String?
  googleId     String?   @unique
  avatarUrl    String?
  bio          String?
  posts        Post[]
  sessions     Session[]
  followers    Follow[]  @relation("following")
  following    Follow[]  @relation("follower")

  createdAt DateTime @default(now())

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Follow {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@unique([followerId, followingId])
  @@map("follows")
}

model Post {
  id          String   @id @default(cuid())
  content     String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  attachments Media[]
  createdAt   DateTime @default(now())

  @@map("posts")
}

model Media {
  id        String    @id @default(uuid())
  post      Post?     @relation(fields: [postId], references: [id], onDelete: SetNull)
  postId    String?
  type      MediaType
  url       String
  createdAt DateTime  @default(now())

  @@map("post_media")
}

enum MediaType {
  IMAGE
  VIDEO
}
